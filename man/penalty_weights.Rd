% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workHorse.R
\name{penalty_weights}
\alias{penalty_weights}
\title{Penalty weights.}
\usage{
penalty_weights(beta_vec, n, penalty_type = NULL, penalty_deriv = NULL,
  lambda, a = NULL, ...)
}
\arguments{
\item{beta_vec}{a numeric vector containing the current estimates of the
regression parameters from the linear portion of the model.}

\item{n}{the number of observations in the data set.}

\item{penalty_type}{a character string indicating which penalty function
should be used. See Details for more information.}

\item{penalty_deriv}{a user-specified function for use in creating the weights.
See Details for more information.}

\item{lambda}{a scalar corresponding to the tuning parameter.}

\item{a}{a scalar for use in the SCAD and MCP penalty functions.}

\item{...}{(optional) additional arguments to be passed to the user-supplied penalty derivative function}
}
\value{
a vector of length (n + 2*length(beta_vec)) containing the weights associated
with the observations in the augmented data set.
}
\description{
\code{penalty_weights} calculates the weights associated with the
observations in the augmented dataset used in fitting the penalized partially
linear quantile regression.
}
\details{
The weights are based on the derivative of the penalty function
used in defining the penalized regression problem. There are two ways for specifying
the derivative of the penalty function. First, the user can provide the name of the penalty
function through the argument penalty_type. Based off this specification, the derivative is then
computed using built-in functions. The current options for the penalty function are
"SCAD" and "MCP". Alternatively, the user can provide their own
penalty derivative function. This function should take as an argument a numeric vector
and return a numeric vector of the same length.
}
